// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "ic-indexer-service/models"
)

// GetIcecreamReader is a Reader for the GetIcecream structure.
type GetIcecreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIcecreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetIcecreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetIcecreamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetIcecreamOK creates a GetIcecreamOK with default headers values
func NewGetIcecreamOK() *GetIcecreamOK {
	return &GetIcecreamOK{}
}

/*GetIcecreamOK handles this case with default header values.

genericModel
*/
type GetIcecreamOK struct {
	Payload *models.GenericModel
}

func (o *GetIcecreamOK) Error() string {
	return fmt.Sprintf("[GET /icecream][%d] getIcecreamOK  %+v", 200, o.Payload)
}

func (o *GetIcecreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIcecreamDefault creates a GetIcecreamDefault with default headers values
func NewGetIcecreamDefault(code int) *GetIcecreamDefault {
	return &GetIcecreamDefault{
		_statusCode: code,
	}
}

/*GetIcecreamDefault handles this case with default header values.

genericError
*/
type GetIcecreamDefault struct {
	_statusCode int

	Payload *models.GenericError
}

// Code gets the status code for the get icecream default response
func (o *GetIcecreamDefault) Code() int {
	return o._statusCode
}

func (o *GetIcecreamDefault) Error() string {
	return fmt.Sprintf("[GET /icecream][%d] getIcecream default  %+v", o._statusCode, o.Payload)
}

func (o *GetIcecreamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
