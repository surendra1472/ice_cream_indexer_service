// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "ic-indexer-service/models"
)

// DeleteIcecreamReader is a Reader for the DeleteIcecream structure.
type DeleteIcecreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteIcecreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDeleteIcecreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewDeleteIcecreamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteIcecreamOK creates a DeleteIcecreamOK with default headers values
func NewDeleteIcecreamOK() *DeleteIcecreamOK {
	return &DeleteIcecreamOK{}
}

/*DeleteIcecreamOK handles this case with default header values.

genericModel
*/
type DeleteIcecreamOK struct {
	Payload *models.GenericModel
}

func (o *DeleteIcecreamOK) Error() string {
	return fmt.Sprintf("[DELETE /icecream][%d] deleteIcecreamOK  %+v", 200, o.Payload)
}

func (o *DeleteIcecreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteIcecreamDefault creates a DeleteIcecreamDefault with default headers values
func NewDeleteIcecreamDefault(code int) *DeleteIcecreamDefault {
	return &DeleteIcecreamDefault{
		_statusCode: code,
	}
}

/*DeleteIcecreamDefault handles this case with default header values.

genericError
*/
type DeleteIcecreamDefault struct {
	_statusCode int

	Payload *models.GenericError
}

// Code gets the status code for the delete icecream default response
func (o *DeleteIcecreamDefault) Code() int {
	return o._statusCode
}

func (o *DeleteIcecreamDefault) Error() string {
	return fmt.Sprintf("[DELETE /icecream][%d] deleteIcecream default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteIcecreamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
