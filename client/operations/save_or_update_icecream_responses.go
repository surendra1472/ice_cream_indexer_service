// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "ic-indexer-service/models"
)

// SaveOrUpdateIcecreamReader is a Reader for the SaveOrUpdateIcecream structure.
type SaveOrUpdateIcecreamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SaveOrUpdateIcecreamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSaveOrUpdateIcecreamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewSaveOrUpdateIcecreamDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSaveOrUpdateIcecreamOK creates a SaveOrUpdateIcecreamOK with default headers values
func NewSaveOrUpdateIcecreamOK() *SaveOrUpdateIcecreamOK {
	return &SaveOrUpdateIcecreamOK{}
}

/*SaveOrUpdateIcecreamOK handles this case with default header values.

genericModel
*/
type SaveOrUpdateIcecreamOK struct {
	Payload *models.GenericModel
}

func (o *SaveOrUpdateIcecreamOK) Error() string {
	return fmt.Sprintf("[PUT /icecream][%d] saveOrUpdateIcecreamOK  %+v", 200, o.Payload)
}

func (o *SaveOrUpdateIcecreamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericModel)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSaveOrUpdateIcecreamDefault creates a SaveOrUpdateIcecreamDefault with default headers values
func NewSaveOrUpdateIcecreamDefault(code int) *SaveOrUpdateIcecreamDefault {
	return &SaveOrUpdateIcecreamDefault{
		_statusCode: code,
	}
}

/*SaveOrUpdateIcecreamDefault handles this case with default header values.

genericError
*/
type SaveOrUpdateIcecreamDefault struct {
	_statusCode int

	Payload *models.GenericError
}

// Code gets the status code for the save or update icecream default response
func (o *SaveOrUpdateIcecreamDefault) Code() int {
	return o._statusCode
}

func (o *SaveOrUpdateIcecreamDefault) Error() string {
	return fmt.Sprintf("[PUT /icecream][%d] SaveOrUpdateIcecream default  %+v", o._statusCode, o.Payload)
}

func (o *SaveOrUpdateIcecreamDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
